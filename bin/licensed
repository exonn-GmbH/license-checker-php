#!/usr/bin/env php
<?php declare(strict_types=1);

use LicenseChecker\Commands\CheckLicenses;
use LicenseChecker\Commands\GenerateConfig;
use LicenseChecker\Commands\ListAllowedLicenses;
use LicenseChecker\Commands\ListUsedLicenses;
use LicenseChecker\Commands\Output\TableRenderer;
use LicenseChecker\Composer\DependencyTree;
use LicenseChecker\Composer\DependencyTreeRetriever;
use LicenseChecker\Composer\UsedLicensesParser;
use LicenseChecker\Composer\UsedLicensesRetriever;
use LicenseChecker\Configuration\AllowedLicensesParser;
use Symfony\Component\Console\Application;

$potentialAutoLoaderFiles = [
    __DIR__ . '/../vendor/autoload.php',
    __DIR__ . '/../../../autoload.php'
];

foreach ($potentialAutoLoaderFiles as $potentialAutoLoaderFile) {
    if (file_exists($potentialAutoLoaderFile)) {
        $autoLoader = require $potentialAutoLoaderFile;
        break;
    }
}

if (!$autoLoader) {
    throw new RuntimeException('vendor/autoload.php could not be found. Did you run `composer install`?');
}

$application = new Application('License Checker', '0.0.1');

$checkLicenses = new CheckLicenses(
    new UsedLicensesParser(new UsedLicensesRetriever()),
    new AllowedLicensesParser(),
    new DependencyTree(new DependencyTreeRetriever()),
    new TableRenderer()
);
$application->add($checkLicenses);

$listUsedLicenses = new ListUsedLicenses(
    new UsedLicensesParser(new UsedLicensesRetriever())
);
$application->add($listUsedLicenses);

$listAllowedLicenses = new ListAllowedLicenses(
    new AllowedLicensesParser()
);
$application->add($listAllowedLicenses);

$generateConfig = new GenerateConfig(
    new AllowedLicensesParser(),
    new UsedLicensesParser(new UsedLicensesRetriever())
);
$application->add($generateConfig);

$application->run();
